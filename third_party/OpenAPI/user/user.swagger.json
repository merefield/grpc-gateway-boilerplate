{
  "swagger": "2.0",
  "info": {
    "title": "package user",
    "version": "2.0.1"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/restricted/user/{id}": {
      "get": {
        "summary": "Get a user's restricted information",
        "description": "Get user profile from the server including private information.",
        "operationId": "ResonateUser_GetUserRestricted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserPrivateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user from the server.",
        "operationId": "ResonateUser_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "summary": "Get a user",
        "description": "Get a user's public information from the server.",
        "operationId": "ResonateUser_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserPublicResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Update a user",
        "description": "Update an existing user record on the server.",
        "operationId": "ResonateUser_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "List users",
        "description": "List all users on the server.",
        "operationId": "ResonateUser_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUserListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Add a user",
        "description": "Add a user to the server.",
        "operationId": "ResonateUser_AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "apiAddUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "newsletterNotification": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiEmpty": {
      "type": "object"
    },
    "apiUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "newsletterNotification": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiUserListResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiUserPrivateResponse"
          }
        }
      }
    },
    "apiUserPrivateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "newsletterNotification": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiUserPublicResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "gRPC-gateway resonate-user-api repository",
    "url": "https://github.com/merefield/grpc-user-api"
  }
}
